#
# This file is a part of the NsCDE - Not so Common Desktop Environment
# Author: Hegel3DReloaded
# Licence: GPLv3
#

UseGettext {$NSCDE_ROOT/share/locale;NsCDE-FontMgr}
WindowLocaleTitle {Style Manager - Font}
WindowSize 528 692
Colorset 22

Init
Begin
   # Locale stuff: Hack to keep leading or ending space(s)
   # which will be trimmed by LocaleTitle Widget directive.
   ChangeLocaleTitle 2 (GetTitle 2)
   ChangeLocaleTitle 22 (GetTitle 22)
   ChangeLocaleTitle 23 (GetTitle 23)
   ChangeLocaleTitle 24 (GetTitle 24)

   Set $SmallLabelFont = (GetOutput {$NSCDE_ROOT/bin/getfont -v -t normal -s small -Z 10} 1 -1)
   ChangeFont 2 $SmallLabelFont
   ChangeFont 22 $SmallLabelFont
   ChangeFont 23 $SmallLabelFont
   ChangeFont 24 $SmallLabelFont

   Set $LabelFont = (GetOutput {$NSCDE_ROOT/bin/getfont -v -t normal -s medium -Z 12.5} 1 -1)
   ChangeFont 3 $LabelFont
   ChangeFont 4 $LabelFont
   ChangeFont 5 $LabelFont
   ChangeFont 6 $LabelFont
   ChangeFont 7 $LabelFont
   ChangeFont 9 $LabelFont
   ChangeFont 10 $LabelFont
   ChangeFont 11 $LabelFont
   ChangeFont 12 $LabelFont
   ChangeFont 13 $LabelFont
   ChangeFont 14 $LabelFont
   ChangeFont 26 $LabelFont
   ChangeFont 27 $LabelFont
   ChangeFont 28 $LabelFont

   Set $FontExampleText = (Gettext {Quick Brown Fox Jumps Over a Lazy Dog ...})
   ChangeLocaleTitle 15 $FontExampleText
   ChangeLocaleTitle 16 $FontExampleText
   ChangeLocaleTitle 17 $FontExampleText
   ChangeLocaleTitle 18 $FontExampleText
   ChangeLocaleTitle 19 $FontExampleText

   Set $FontList = (GetOutput {$NSCDE_ROOT/libexec/fontmgr -p} 1 -1)
   ChangeTitle 5 $FontList

   Set $SizeGroupMenu = { Small| Medium| Large}
   ChangeLocaleTitle 10 $SizeGroupMenu
   ChangeValue 10 2

   Set $FontSizes = {4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26}
   ChangeLocaleTitle 14 $FontSizes
   ChangeValue 14 8

   # Default Fonts: set initial values
   Set $FontNormalSmallStr = (GetOutput {$NSCDE_ROOT/bin/getfont -v -t normal -s small} 1 -1)
   Set $FontBoldSmallStr = (GetOutput {$NSCDE_ROOT/bin/getfont -v -t bold -s small} 1 -1)
   Set $FontItalicSmallStr = (GetOutput {$NSCDE_ROOT/bin/getfont -v -t italic -s small} 1 -1)
   Set $FontMonoSmallStr = (GetOutput {$NSCDE_ROOT/bin/getfont -m -t normal -s small} 1 -1)
   Set $FontMonoBoldSmallStr = (GetOutput {$NSCDE_ROOT/bin/getfont -m -t bold -s small} 1 -1)

   Set $FontNormalMediumStr = (GetOutput {$NSCDE_ROOT/bin/getfont -v -t normal -s medium} 1 -1)
   Set $FontBoldMediumStr = (GetOutput {$NSCDE_ROOT/bin/getfont -v -t bold -s medium} 1 -1)
   Set $FontItalicMediumStr = (GetOutput {$NSCDE_ROOT/bin/getfont -v -t italic -s medium} 1 -1)
   Set $FontMonoMediumStr = (GetOutput {$NSCDE_ROOT/bin/getfont -m -t normal -s medium} 1 -1)
   Set $FontMonoBoldMediumStr = (GetOutput {$NSCDE_ROOT/bin/getfont -m -t bold -s medium} 1 -1)

   Set $FontNormalLargeStr = (GetOutput {$NSCDE_ROOT/bin/getfont -v -t normal -s large} 1 -1)
   Set $FontBoldLargeStr = (GetOutput {$NSCDE_ROOT/bin/getfont -v -t bold -s large} 1 -1)
   Set $FontItalicLargeStr = (GetOutput {$NSCDE_ROOT/bin/getfont -v -t italic -s large} 1 -1)
   Set $FontMonoLargeStr = (GetOutput {$NSCDE_ROOT/bin/getfont -m -t normal -s large} 1 -1)
   Set $FontMonoBoldLargeStr = (GetOutput {$NSCDE_ROOT/bin/getfont -m -t bold -s large} 1 -1)

   ChangeFont 15 $FontNormalMediumStr
   ChangeFont 16 $FontBoldMediumStr
   ChangeFont 17 $FontItalicMediumStr
   ChangeFont 18 $FontMonoMediumStr
   ChangeFont 19 $FontMonoBoldMediumStr
   ChangeFont 20 $FontNormalMediumStr

   # Select Default font, it's style, and size
   Set $FontNormalMediumStrCmd = {$NSCDE_ROOT/libexec/fontmgr -r '} $FontNormalMediumStr {'}
   Set $FontNormalMediumStrNameNum = (GetOutput $FontNormalMediumStrCmd 1 -1)
   Set $FontNormalMediumStrStyleNum = (GetOutput $FontNormalMediumStrCmd 2 -1)
   Set $FontNormalMediumStrSizeNum = (Add (GetOutput $FontNormalMediumStrCmd 3 1) -3)
   Set $FontNormalMediumStrName = (GetOutput $FontNormalMediumStrCmd 4 -1)

   Set $FontNormalMediumStrMenuCmd = {$NSCDE_ROOT/libexec/fontmgr -G menu -g '} $FontNormalMediumStrName {'}
   Set $FontNormalMediumStrMenu = (GetOutput $FontNormalMediumStrMenuCmd 1 -1)

   ChangeValue 5 $FontNormalMediumStrNameNum
   ChangeTitle 7 $FontNormalMediumStrMenu
   ChangeValue 7 $FontNormalMediumStrStyleNum
   ChangeValue 14 $FontNormalMediumStrSizeNum

   # Key bindings
   Key Q C 27 1 {KeyClose}
   Key F1 A 28 1 {KeyHelp}
   Key Help A 28 1 {KeyHelp}

   # Initial defaults
   Set $OperationMode = 1
   Set $ActivePreviewField = 15
   Do {Schedule 1000 SendToModule FontMgr SendString 101 2 initial}

   # Defaults for Font Size Popup
   Set $FontConstruct = $FontNormalMediumStr

   # Defaults for fontset
   Set $DefaultFontset = {DejaVuSerif}
   Set $DefaultFontsetPath = {$NSCDE_ROOT/share/fontsets/} $DefaultFontset {.fontset}
   Set $FontsetPath = $DefaultFontsetPath

   # Manage race condition between messages for InputForm and ChoiceForm
   # Default will be the messages listening for InputForm
   Set $QuitStarted = 0
End

# In PeriodicTasks be careful not to mess messages from two different dialogs.
PeriodicTasks
Begin
   If $QuitStarted == 0 Then
   Begin
      Set $MSG = (ReceivFromScript $INPUTFORM)
      # Do {Echo >>> >>> >>> INPUT-FORM MESSAGE: } $MSG
      If $MSG <> {No message} Then
      Begin
        If $MSG <> {Go} Then
        Begin
           Do {Schedule 250 SendToModule FontMgr SendString 26 1 } $MSG
        End
      End
   End
   Else
   Begin
      Set $QUITMSG = (ReceivFromScript $QUITFORM)
      # Do {Echo >>> >>> >>> QUIT-FORM MESSAGE: } $QUITMSG
      If $QUITMSG <> {No message} Then
      Begin
         Do {SendToModule FontMgr SendString 26 4 } $QUITMSG
      End
   End
End

Widget 1
   Property
   Position 10 8
   Flags NoReliefString NoFocus
   Type ItemDraw
   Icon NsCDE/DtFont.xpm
   Main
      Case message of
      SingleClic :
      Begin
      End
End

Widget 2
   Property
   Position 108 14
   Size 180 20
   Flags NoReliefString
   Type CheckBox
   Font "xft:::pixelsize=14"
   Value 0
   Title { Use Predefined Font Set          }
   Main
      Case message of
      SingleClic :
      Begin
         SendSignal 2 1
      End
      1 :
      Begin
         If (GetValue 2) == 1 Then
         Begin
            Set $FontsetList = (GetOutput {$NSCDE_ROOT/libexec/fontmgr -P} 1 -1)
            ChangeTitle 5 $FontsetList
            ChangeLocaleTitle 3 {Default|Default|Delete Fontset}
            ChangeColorset 7 22
            ChangeTitle 7 {}
            ChangeLocaleTitle 4 {Font Sets}
            HideWidget 13
            HideWidget 14
            Set $OperationMode = 2
            Set $SelectDefaultFontsetCmd = {$NSCDE_ROOT/libexec/fontmgr -f "} $DefaultFontset {"}
            Set $SelectDefaultFontset = (GetOutput $SelectDefaultFontsetCmd 1 -1)
            ChangeValue 5 $SelectDefaultFontset
            SendSignal 5 2
         End
         Else
         Begin
            Set $FontList = (GetOutput {$NSCDE_ROOT/libexec/fontmgr -p} 1 -1)
            ChangeTitle 5 $FontList
            ChangeLocaleTitle 3 {Default|Default|Cancel}
            ChangeColorset 7 20
            ChangeLocaleTitle 4 {Fonts}
            ShowWidget 13
            ShowWidget 14
            Set $OperationMode = 1
            SendSignal 101 3
         End
      End
End


Widget 3
   Property
   Position 396 10
   Size 120 30
   Flags NoReliefString
   Type PushButton
   LocaleTitle {Default|Default|Cancel}
   Main
      Case message of
      SingleClic :
      Begin
         If $OperationMode == 1 Then
         Begin
            If (GetValue 3) <> 2 Then
            Begin
               SendSignal 3 1
            End
         End
         If $OperationMode == 2 Then
         Begin
            If (GetValue 3) == 1 Then
            Begin
               SendSignal 3 1
            End
            If (GetValue 3) == 2 Then
            Begin
               Do {f_RunQuickScriptDialog ActionForm "$[gt.Delete Fontset] \"} $FontsetName {\"" "$[gt.Yes]" "$[gt.No]" "$[gt.Delete Fontset]" "SendToModule FontMgr SendString 3 2 confirmed"}
               SendSignal 3 2
            End
         End
      End
      1 :
      Begin
         # Set default values
         Set $FontGetCmd = {$NSCDE_ROOT/bin/getfont -f "} $DefaultFontsetPath {" -v -t normal -s small}
         Set $FontNormalSmallStr = (GetOutput $FontGetCmd 1 -1)
         Set $FontGetCmd = {$NSCDE_ROOT/bin/getfont -f "} $DefaultFontsetPath {" -v -t bold -s small}
         Set $FontBoldSmallStr = (GetOutput $FontGetCmd 1 -1)
         Set $FontGetCmd = {$NSCDE_ROOT/bin/getfont -f "} $DefaultFontsetPath {" -v -t italic -s small}
         Set $FontItalicSmallStr = (GetOutput $FontGetCmd 1 -1)
         Set $FontGetCmd = {$NSCDE_ROOT/bin/getfont -f "} $DefaultFontsetPath {" -m -t normal -s small}
         Set $FontMonoSmallStr = (GetOutput $FontGetCmd 1 -1)
         Set $FontGetCmd = {$NSCDE_ROOT/bin/getfont -f "} $DefaultFontsetPath {" -m -t bold -s small}
         Set $FontMonoBoldSmallStr = (GetOutput $FontGetCmd 1 -1)

         Set $FontGetCmd = {$NSCDE_ROOT/bin/getfont -f "} $DefaultFontsetPath {" -v -t normal -s medium}
         Set $FontNormalMediumStr = (GetOutput $FontGetCmd 1 -1)
         Set $FontGetCmd = {$NSCDE_ROOT/bin/getfont -f "} $DefaultFontsetPath {" -v -t bold -s medium}
         Set $FontBoldMediumStr = (GetOutput $FontGetCmd 1 -1)
         Set $FontGetCmd = {$NSCDE_ROOT/bin/getfont -f "} $DefaultFontsetPath {" -v -t italic -s medium}
         Set $FontItalicMediumStr = (GetOutput $FontGetCmd 1 -1)
         Set $FontGetCmd = {$NSCDE_ROOT/bin/getfont -f "} $DefaultFontsetPath {" -m -t normal -s medium}
         Set $FontMonoMediumStr = (GetOutput $FontGetCmd 1 -1)
         Set $FontGetCmd = {$NSCDE_ROOT/bin/getfont -f "} $DefaultFontsetPath {" -m -t bold -s medium}
         Set $FontMonoBoldMediumStr = (GetOutput $FontGetCmd 1 -1)

         Set $FontGetCmd = {$NSCDE_ROOT/bin/getfont -f "} $DefaultFontsetPath {" -v -t normal -s large}
         Set $FontNormalLargeStr = (GetOutput $FontGetCmd 1 -1)
         Set $FontGetCmd = {$NSCDE_ROOT/bin/getfont -f "} $DefaultFontsetPath {" -v -t bold -s large}
         Set $FontBoldLargeStr = (GetOutput $FontGetCmd 1 -1)
         Set $FontGetCmd = {$NSCDE_ROOT/bin/getfont -f "} $DefaultFontsetPath {" -v -t italic -s large}
         Set $FontItalicLargeStr = (GetOutput $FontGetCmd 1 -1)
         Set $FontGetCmd = {$NSCDE_ROOT/bin/getfont -f "} $DefaultFontsetPath {" -m -t normal -s large}
         Set $FontMonoLargeStr = (GetOutput $FontGetCmd 1 -1)
         Set $FontGetCmd = {$NSCDE_ROOT/bin/getfont -f "} $DefaultFontsetPath {" -m -t bold -s large}
         Set $FontMonoBoldLargeStr = (GetOutput $FontGetCmd 1 -1)

         Set $SelectDefaultFontsetCmd = {$NSCDE_ROOT/libexec/fontmgr -f "} $DefaultFontset {"}
         Set $SelectDefaultFontset = (GetOutput $SelectDefaultFontsetCmd 1 -1)

         ChangeValue 5 $SelectDefaultFontset
         Set $FontsetName = $DefaultFontset
         SendSignal 10 1
      End
      2 :
      Begin
         # XXX select default after deletion
         If (LastString) == {confirmed} Then
         Begin
            Set $DeleteFontsetCmd = {rm -f '} $FontsetPath {' 2>&1}
            Set $DeleteFontset = (GetOutput $DeleteFontsetCmd 1 -1)

            If $DeleteFontset == {} Then
            Begin
               Do {f_Notifier "Font Style Manager" "Dismiss" "NsCDE/Info.xpm" "$[gt.Fontset file] \\\"} $FontsetName {\\\" $[gt.removed from inventory.]"}
               Set $FontsetList = (GetOutput {$NSCDE_ROOT/libexec/fontmgr -P} 1 -1)
               ChangeTitle 5 $FontsetList
               SendSignal 3 1
               SendSignal 10 1
            End
            Else
            Begin
               Do {f_Notifier "Font Style Manager" "Dismiss" "NsCDE/Error.xpm" "$[gt.Error removing] \\\"} $FontsetName {\\\": } $DeleteFontset {"}
            End
         End
      End
End

Widget 4
   Property
   Position 22 62
   Size 200 20
   Flags NoReliefString NoFocus Left
   Type ItemDraw
   LocaleTitle {Fonts}
   Font "xft:::pixelsize=16"
   Main
      Case message of
      SingleClic :
      Begin
      End
End

Widget 5
   Property
   Position 20 84
   Size 292 168
   Flags NoReliefString
   Type List
   Colorset 20
   Main
      Case message of
      SingleClic :
      Begin
         If $OperationMode == 1 Then
         Begin
            SendSignal 5 1
         End
         If $OperationMode == 2 Then
         Begin
            SendSignal 5 2
         End
      End
      1 :
      Begin
         Set $ListFontNameCmd = {$NSCDE_ROOT/libexec/fontmgr -N } (GetValue 5)
         Set $ListFontName = (GetOutput $ListFontNameCmd 1 -1)
         Set $FontStylesCmd = {$NSCDE_ROOT/libexec/fontmgr -G menu -g '} $ListFontName {'}
         Set $FontStyles = (GetOutput $FontStylesCmd 1 -1)
         ChangeTitle 7 $FontStyles

         If (GetValue 7) == 0 Then
         Begin
            Set $SizeValCmd = {$NSCDE_ROOT/libexec/fontmgr -G total -g '} $ListFontName {'}
            Set $SizeVal = (GetOutput $SizeValCmd 1 -1)
            ChangeValue 7 $SizeVal
         End
         Else
         Begin
            Set $SizeVal = (GetValue 7)
         End

         Set $FontStyleListCmd = {$NSCDE_ROOT/libexec/fontmgr -s } $SizeVal { -g '} $ListFontName {'}
         Set $FontStyleList = (GetOutput $FontStyleListCmd 1 -1)

         Set $FontConstruct = {xft:} $ListFontName {:Medium:} $FontStyleList {:size=} (Add (GetValue 14) 3)
         ChangeFont $ActivePreviewField $FontConstruct
         ChangeFont 20 $FontConstruct

         If (GetValue 10) == 1 Then
         Begin
            If $ActivePreviewField == 15 Then
            Begin
               Set $FontNormalSmallStr = $FontConstruct
            End
            If $ActivePreviewField == 16 Then
            Begin
               Set $FontBoldSmallStr = $FontConstruct
            End
            If $ActivePreviewField == 17 Then
            Begin
               Set $FontItalicSmallStr = $FontConstruct
            End
            If $ActivePreviewField == 18 Then
            Begin
               Set $FontMonoSmallStr = $FontConstruct
            End
            If $ActivePreviewField == 19 Then
            Begin
               Set $FontMonoBoldSmallStr = $FontConstruct
            End
         End

         If (GetValue 10) == 2 Then
         Begin
            If $ActivePreviewField == 15 Then
            Begin
               Set $FontNormalMediumStr = $FontConstruct
            End
            If $ActivePreviewField == 16 Then
            Begin
               Set $FontBoldMediumStr = $FontConstruct
            End
            If $ActivePreviewField == 17 Then
            Begin
               Set $FontItalicMediumStr = $FontConstruct
            End
            If $ActivePreviewField == 18 Then
            Begin
               Set $FontMonoMediumStr = $FontConstruct
            End
            If $ActivePreviewField == 19 Then
            Begin
               Set $FontMonoBoldMediumStr = $FontConstruct
            End
         End

         If (GetValue 10) == 3 Then
         Begin
            If $ActivePreviewField == 15 Then
            Begin
               Set $FontNormalLargeStr = $FontConstruct
            End
            If $ActivePreviewField == 16 Then
            Begin
               Set $FontBoldLargeStr = $FontConstruct
            End
            If $ActivePreviewField == 17 Then
            Begin
               Set $FontItalicLargeStr = $FontConstruct
            End
            If $ActivePreviewField == 18 Then
            Begin
               Set $FontMonoLargeStr = $FontConstruct
            End
            If $ActivePreviewField == 19 Then
            Begin
               Set $FontMonoBoldLargeStr = $FontConstruct
            End
         End
      End
      2 :
      Begin
         Set $FontsetNameCmd = {$NSCDE_ROOT/libexec/fontmgr -F } (GetValue 5)
         Set $FontsetName = (GetOutput $FontsetNameCmd 1 -1)
         Set $FontsetDir = (GetOutput $FontsetNameCmd 2 -1)
         Set $FontsetPath = $FontsetDir $FontsetName {.fontset}

         Set $FontNormalSmallStrCmd = {$NSCDE_ROOT/bin/getfont -f } $FontsetPath { -v -t normal -s small}
         Set $FontNormalSmallStr = (GetOutput $FontNormalSmallStrCmd 1 -1)

         Set $FontBoldSmallStrCmd = {$NSCDE_ROOT/bin/getfont -f } $FontsetPath { -v -t bold -s small}
         Set $FontBoldSmallStr = (GetOutput $FontBoldSmallStrCmd 1 -1)

         Set $FontItalicSmallStrCmd = {$NSCDE_ROOT/bin/getfont -f } $FontsetPath { -v -t italic -s small}
         Set $FontItalicSmallStr = (GetOutput $FontItalicSmallStrCmd 1 -1)

         Set $FontMonoSmallStrCmd = {$NSCDE_ROOT/bin/getfont -f } $FontsetPath { -m -t normal -s small}
         Set $FontMonoSmallStr = (GetOutput $FontMonoSmallStrCmd 1 -1)

         Set $FontMonoBoldSmallStrCmd = {$NSCDE_ROOT/bin/getfont -f } $FontsetPath { -m -t bold -s small}
         Set $FontMonoBoldSmallStr = (GetOutput $FontMonoBoldSmallStrCmd 1 -1)

         Set $FontNormalMediumStrCmd = {$NSCDE_ROOT/bin/getfont -f } $FontsetPath { -v -t normal -s medium}
         Set $FontNormalMediumStr = (GetOutput $FontNormalMediumStrCmd 1 -1)

         Set $FontBoldMediumStrCmd = {$NSCDE_ROOT/bin/getfont -f } $FontsetPath { -v -t bold -s medium}
         Set $FontBoldMediumStr = (GetOutput $FontBoldMediumStrCmd 1 -1)

         Set $FontItalicMediumStrCmd = {$NSCDE_ROOT/bin/getfont -f } $FontsetPath { -v -t italic -s medium}
         Set $FontItalicMediumStr = (GetOutput $FontItalicMediumStrCmd 1 -1)

         Set $FontMonoMediumStrCmd = {$NSCDE_ROOT/bin/getfont -f } $FontsetPath { -m -t normal -s medium}
         Set $FontMonoMediumStr = (GetOutput $FontMonoMediumStrCmd 1 -1)

         Set $FontMonoBoldMediumStrCmd = {$NSCDE_ROOT/bin/getfont -f } $FontsetPath { -m -t bold -s medium}
         Set $FontMonoBoldMediumStr = (GetOutput $FontMonoBoldMediumStrCmd 1 -1)

         Set $FontNormalLargeStrCmd = {$NSCDE_ROOT/bin/getfont -f } $FontsetPath { -v -t normal -s large}
         Set $FontNormalLargeStr = (GetOutput $FontNormalLargeStrCmd 1 -1)

         Set $FontBoldLargeStrCmd = {$NSCDE_ROOT/bin/getfont -f } $FontsetPath { -v -t bold -s large}
         Set $FontBoldLargeStr = (GetOutput $FontBoldLargeStrCmd 1 -1)

         Set $FontItalicLargeStrCmd = {$NSCDE_ROOT/bin/getfont -f } $FontsetPath { -v -t italic -s large}
         Set $FontItalicLargeStr = (GetOutput $FontItalicLargeStrCmd 1 -1)

         Set $FontMonoLargeStrCmd = {$NSCDE_ROOT/bin/getfont -f } $FontsetPath { -m -t normal -s large}
         Set $FontMonoLargeStr = (GetOutput $FontMonoLargeStrCmd 1 -1)

         Set $FontMonoBoldLargeStrCmd = {$NSCDE_ROOT/bin/getfont -f } $FontsetPath { -m -t bold -s large}
         Set $FontMonoBoldLargeStr = (GetOutput $FontMonoBoldLargeStrCmd 1 -1)

         SendSignal 10 1
      End
End

Widget 6
   Property
   Position 334 62
   Flags NoReliefString NoFocus Left
   Type ItemDraw
   LocaleTitle {Font Style}
   Main
      Case message of
      SingleClic :
      Begin
      End
End

Widget 7
   Property
   Position 326 84
   Size 182 168
   Flags NoReliefString
   Type List
   Colorset 20
   Main
      Case message of
      SingleClic :
      Begin
         If $OperationMode == 1 Then
         Begin
            SendSignal 5 1
         End
      End
End

Widget 8
   Property
   Position 10 56
   Size 508 206
   Flags NoReliefString NoFocus
   Type Rectangle
   Main
      Case message of
      SingleClic :
      Begin
      End
End

Widget 9
   Property
   Position 12 270
   Flags NoReliefString NoFocus Left
   Type ItemDraw
   LocaleTitle {Font Size Group:}
   Font "xft:::pixelsize=15"
   Main
      Case message of
      SingleClic :
      Begin
      End
End

Widget 10
   Property
   Position 12 296
   Size 540 244
   Flags NoReliefString
   Type PopupMenu
   Font "xft:::pixelsize=15"
   Title {xxxxxxxxxxxxxx}
   Main
      Case message of
      SingleClic :
      Begin
         SendSignal 10 1
      End
      1 :
      Begin
         If (GetValue 10) == 1 Then
         Begin
            # Holder for black on white - examine, extend if needed
            Do {Schedule 120 SendToModule FontMgr SendString } $ActivePreviewField { 1 dummy}
            ChangeFont 15 $FontNormalSmallStr
            ChangeFont 16 $FontBoldSmallStr
            ChangeFont 17 $FontItalicSmallStr
            ChangeFont 18 $FontMonoSmallStr
            ChangeFont 19 $FontMonoBoldSmallStr
            If $ActivePreviewField == 15 Then
            Begin
               ChangeFont 20 $FontNormalSmallStr
            End
            If $ActivePreviewField == 16 Then
            Begin
               ChangeFont 20 $FontBoldSmallStr
            End
            If $ActivePreviewField == 17 Then
            Begin
               ChangeFont 20 $FontItalicSmallStr
            End
            If $ActivePreviewField == 18 Then
            Begin
               ChangeFont 20 $FontMonoSmallStr
            End
            If $ActivePreviewField == 19 Then
            Begin
               ChangeFont 20 $FontMonoBoldSmallStr
            End
         End
         If (GetValue 10) == 2 Then
         Begin
            # Holder for black on white - examine, extend if needed
            Do {Schedule 120 SendToModule FontMgr SendString } $ActivePreviewField { 1 dummy}
            ChangeFont 15 $FontNormalMediumStr
            ChangeFont 16 $FontBoldMediumStr
            ChangeFont 17 $FontItalicMediumStr
            ChangeFont 18 $FontMonoMediumStr
            ChangeFont 19 $FontMonoBoldMediumStr
            If $ActivePreviewField == 15 Then
            Begin
               ChangeFont 20 $FontNormalMediumStr
            End
            If $ActivePreviewField == 16 Then
            Begin
               ChangeFont 20 $FontBoldMediumStr
            End
            If $ActivePreviewField == 17 Then
            Begin
               ChangeFont 20 $FontItalicMediumStr
            End
            If $ActivePreviewField == 18 Then
            Begin
               ChangeFont 20 $FontMonoMediumStr
            End
            If $ActivePreviewField == 19 Then
            Begin
               ChangeFont 20 $FontMonoBoldMediumStr
            End
         End
         If (GetValue 10) == 3 Then
         Begin
            # Holder for black on white - examine, extend if needed
            Do {Schedule 120 SendToModule FontMgr SendString } $ActivePreviewField { 1 dummy}
            ChangeFont 15 $FontNormalLargeStr
            ChangeFont 16 $FontBoldLargeStr
            ChangeFont 17 $FontItalicLargeStr
            ChangeFont 18 $FontMonoLargeStr
            ChangeFont 19 $FontMonoBoldLargeStr
            If $ActivePreviewField == 15 Then
            Begin
               ChangeFont 20 $FontNormalLargeStr
            End
            If $ActivePreviewField == 16 Then
            Begin
               ChangeFont 20 $FontBoldLargeStr
            End
            If $ActivePreviewField == 17 Then
            Begin
               ChangeFont 20 $FontItalicLargeStr
            End
            If $ActivePreviewField == 18 Then
            Begin
               ChangeFont 20 $FontMonoLargeStr
            End
            If $ActivePreviewField == 19 Then
            Begin
               ChangeFont 20 $FontMonoBoldLargeStr
            End
         End
      End
End

Widget 11
   Property
   Position 210 270
   Flags NoReliefString NoFocus Left
   Type ItemDraw
   LocaleTitle {Font Style Group:}
   Font "xft:::pixelsize=15"
   Main
      Case message of
      SingleClic :
      Begin
      End
End

Widget 12
   Property
   Size 180 244
   Position 212 296
   Flags NoReliefString
   Type PopupMenu
   Font "xft:::pixelsize=15"
   LocaleTitle {Regular|Bold|Italic|Monospaced|Monospaced Bold}
   Value 5
   Main
      Case message of
      SingleClic :
      Begin
         SendSignal 12 1
      End
      1 :
      Begin
         If (GetValue 12) == 1 Then
         Begin
            SendSignal 15 1
         End
         If (GetValue 12) == 2 Then
         Begin
            SendSignal 16 1
         End
         If (GetValue 12) == 3 Then
         Begin
            SendSignal 17 1
         End
         If (GetValue 12) == 4 Then
         Begin
            SendSignal 18 1
         End
         If (GetValue 12) == 5 Then
         Begin
            SendSignal 19 1
         End
      End
End

Widget 13
   Property
   Position 428 270
   Flags NoReliefString NoFocus Left
   Type ItemDraw
   LocaleTitle {Set Size:}
   Font "xft:::pixelsize=15"
   Main
      Case message of
      SingleClic :
      Begin
      End
End

Widget 14
   Property
   Size 120 244
   Position 428 296
   Flags NoReliefString
   Type PopupMenu
   Font "xft:::pixelsize=15"
   Title { xxxx }
   Main
      Case message of
      SingleClic :
      Begin
         If $OperationMode == 1 Then
         Begin
            SendSignal 5 1
            SendSignal 14 1
         End
      End
      1 :
      Begin
         Set $SplitFontStrCmd = {$NSCDE_ROOT/libexec/fontmgr -r '} $FontConstruct {'}
         Set $FontNameNum = (GetOutput $SplitFontStrCmd 1 -1)
         Set $FontStyleNum = (GetOutput $SplitFontStrCmd 2 -1)
         Set $FontSizeNum = (Add (GetValue 14) 3)
         Set $FontName = (GetOutput $SplitFontStrCmd 4 -1)
         Set $FontStyleCmd = {$NSCDE_ROOT/libexec/fontmgr -s } (GetValue 7) { -g '} $FontConstruct {'}
         Set $FontStyle = (GetOutput $FontStyleListCmd 1 -1)
         Set $FontConstruct = {xft:} $FontName {:Medium:} $FontStyle {:size=} $FontSizeNum

         If (GetValue 10) == 1 Then
         Begin
            If $ActivePreviewField == 15 Then
            Begin
               Set $FontNormalSmallStr = $FontConstruct
            End
            If $ActivePreviewField == 16 Then
            Begin
               Set $FontBoldSmallStr = $FontConstruct
            End
            If $ActivePreviewField == 17 Then
            Begin
               Set $FontItalicSmallStr = $FontConstruct
            End
            If $ActivePreviewField == 18 Then
            Begin
               Set $FontMonoSmallStr = $FontConstruct
            End
            If $ActivePreviewField == 19 Then
            Begin
               Set $FontMonoBoldSmallStr = $FontConstruct
            End
         End

         If (GetValue 10) == 2 Then
         Begin
            If $ActivePreviewField == 15 Then
            Begin
               Set $FontNormalMediumStr = $FontConstruct
            End
            If $ActivePreviewField == 16 Then
            Begin
               Set $FontBoldMediumStr = $FontConstruct
            End
            If $ActivePreviewField == 17 Then
            Begin
               Set $FontItalicMediumStr = $FontConstruct
            End
            If $ActivePreviewField == 18 Then
            Begin
               Set $FontMonoMediumStr = $FontConstruct
            End
            If $ActivePreviewField == 19 Then
            Begin
               Set $FontMonoBoldMediumStr = $FontConstruct
            End
         End

         If (GetValue 10) == 3 Then
         Begin
            If $ActivePreviewField == 15 Then
            Begin
               Set $FontNormalLargeStr = $FontConstruct
            End
            If $ActivePreviewField == 16 Then
            Begin
               Set $FontBoldLargeStr = $FontConstruct
            End
            If $ActivePreviewField == 17 Then
            Begin
               Set $FontItalicLargeStr = $FontConstruct
            End
            If $ActivePreviewField == 18 Then
            Begin
               Set $FontMonoLargeStr = $FontConstruct
            End
            If $ActivePreviewField == 19 Then
            Begin
               Set $FontMonoBoldLargeStr = $FontConstruct
            End
         End

         # Holder for black on white - examine, extend if needed
         Do {Schedule 120 SendToModule FontMgr SendString } $ActivePreviewField { 1 dummy}
      End
End

Widget 15
   Property
   Position 18 344
   Size 490 4
   Colorset 22
   Flags NoReliefString Left
   Type ItemDraw
   Title {Quick Brown Fox}
   Font "xft:::pixelsize=24"
   Main
      Case message of
      SingleClic :
      Begin
         SendSignal 15 1
      End
      1 :
      Begin
         If $ActivePreviewField <> 15 Then
         Begin
            ShowWidget $ActivePreviewField
            If (GetTitle 20) <> $FontExampleText Then
            Begin
               ChangeTitle $ActivePreviewField (GetTitle 20)
            End
         End
         HideWidget 15
         ChangePosition 20 18 344
         ChangeTitle 20 (GetTitle 15)
         ShowWidget 20
         Set $ActivePreviewField = 15
         SendSignal 15 2
         SendSignal 101 1

         If $OperationMode == 2 Then
         Begin
            Set $FontsetInfo = {Fontset:|} $FontsetName {||} $FontName {|Style: } $FontStyle {|Size: } (Add $FontSizeNum 3)
            ChangeTitle 7 $FontsetInfo
         End
      End
      2 :
      Begin
         If (GetValue 10) == 1 Then
         Begin
            Set $FontConstruct = $FontNormalSmallStr
            SendSignal 101 3
         End
         If (GetValue 10) == 2 Then
         Begin
            Set $FontConstruct = $FontNormalMediumStr
            SendSignal 101 3
         End
         If (GetValue 10) == 3 Then
         Begin
            Set $FontConstruct = $FontNormalLargeStr
            SendSignal 101 3
         End
      End
End

Widget 16
   Property
   Position 18 394
   Size 490 4
   Colorset 22
   Flags NoReliefString Left
   Type ItemDraw
   Title {Quick Brown Fox}
   Font "xft:::pixelsize=24"
   Main
      Case message of
      SingleClic :
      Begin
         SendSignal 16 1
      End
      1 :
      Begin
         If $ActivePreviewField <> 16 Then
         Begin
            ShowWidget $ActivePreviewField
            If (GetTitle 20) <> $FontExampleText Then
            Begin
               ChangeTitle $ActivePreviewField (GetTitle 20)
            End
         End
         HideWidget 16
         ChangePosition 20 18 394
         ChangeTitle 20 (GetTitle 16)
         ShowWidget 20
         Set $ActivePreviewField = 16
         SendSignal 16 2
         SendSignal 101 1

         If $OperationMode == 2 Then
         Begin
            Set $FontsetInfo = {Fontset:|} $FontsetName {||} $FontName {|Style: } $FontStyle {|Size: } (Add $FontSizeNum 3)
            ChangeTitle 7 $FontsetInfo
         End
      End
      2 :
      Begin
         If (GetValue 10) == 1 Then
         Begin
            Set $FontConstruct = $FontBoldSmallStr
            SendSignal 101 3
         End
         If (GetValue 10) == 2 Then
         Begin
            Set $FontConstruct = $FontBoldMediumStr
            SendSignal 101 3
         End
         If (GetValue 10) == 3 Then
         Begin
            Set $FontConstruct = $FontBoldLargeStr
            SendSignal 101 3
         End
      End
End

Widget 17
   Property
   Position 18 444
   Size 490 4
   Colorset 22
   Flags NoReliefString Left
   Type ItemDraw
   Title {Quick Brown Fox}
   Font "xft:::pixelsize=24"
   Main
      Case message of
      SingleClic :
      Begin
         SendSignal 17 1
      End
      1 :
      Begin
         If $ActivePreviewField <> 17 Then
         Begin
           ShowWidget $ActivePreviewField
            If (GetTitle 20) <> $FontExampleText Then
            Begin
               ChangeTitle $ActivePreviewField (GetTitle 20)
            End
         End
         HideWidget 17
         ChangePosition 20 18 444
         ChangeTitle 20 (GetTitle 17)
         ShowWidget 20
         Set $ActivePreviewField = 17
         SendSignal 17 2
         SendSignal 101 1

         If $OperationMode == 2 Then
         Begin
            Set $FontsetInfo = {Fontset:|} $FontsetName {||} $FontName {|Style: } $FontStyle {|Size: } (Add $FontSizeNum 3)
            ChangeTitle 7 $FontsetInfo
         End
      End
      2 :
      Begin
         If (GetValue 10) == 1 Then
         Begin
            Set $FontConstruct = $FontItalicSmallStr
            SendSignal 101 3
         End
         If (GetValue 10) == 2 Then
         Begin
            Set $FontConstruct = $FontItalicMediumStr
            SendSignal 101 3
         End
         If (GetValue 10) == 3 Then
         Begin
            Set $FontConstruct = $FontItalicLargeStr
            SendSignal 101 3
         End
      End
End

Widget 18
   Property
   Position 18 494
   Size 490 4
   Colorset 22
   Flags NoReliefString Left
   Type ItemDraw
   Title {Quick Brown Fox}
   Font "xft:::pixelsize=24"
   Main
      Case message of
      SingleClic :
      Begin
         SendSignal 18 1
      End
      1 :
      Begin
         If $ActivePreviewField <> 18 Then
         Begin
            ShowWidget $ActivePreviewField
            If (GetTitle 20) <> $FontExampleText Then
            Begin
               ChangeTitle $ActivePreviewField (GetTitle 20)
            End
         End
         HideWidget 18
         ChangePosition 20 18 494
         ChangeTitle 20 (GetTitle 18)
         ShowWidget 20
         Set $ActivePreviewField = 18
         SendSignal 18 2
         SendSignal 101 1

         If $OperationMode == 2 Then
         Begin
            Set $FontsetInfo = {Fontset:|} $FontsetName {||} $FontName {|Style: } $FontStyle {|Size: } (Add $FontSizeNum 3)
            ChangeTitle 7 $FontsetInfo
         End
      End
      2 :
      Begin
         If (GetValue 10) == 1 Then
         Begin
            Set $FontConstruct = $FontMonoSmallStr
            SendSignal 101 3
         End
         If (GetValue 10) == 2 Then
         Begin
            Set $FontConstruct = $FontMonoMediumStr
            SendSignal 101 3
         End
         If (GetValue 10) == 3 Then
         Begin
            Set $FontConstruct = $FontMonoLargeStr
            SendSignal 101 3
         End
      End
End

# Font here is to guarantee height of the TextField widget
Widget 19
   Property
   Position 18 544
   Size 490 4
   Colorset 22
   Flags NoReliefString Left
   Type ItemDraw
   Title {Quick Brown Fox}
   Font "xft:::pixelsize=24"
   Main
      Case message of
      SingleClic :
      Begin
         SendSignal 19 1
      End
      1 :
      Begin
         If $ActivePreviewField <> 19 Then
         Begin
            ShowWidget $ActivePreviewField
            If (GetTitle 20) <> $FontExampleText Then
            Begin
               ChangeTitle $ActivePreviewField (GetTitle 20)
            End
         End
         HideWidget 19
         ChangePosition 20 18 544
         ChangeTitle 20 (GetTitle 19)
         ChangeColorset 19 20
         ShowWidget 20
         Set $ActivePreviewField = 19
         SendSignal 19 2
         SendSignal 101 1

         If $OperationMode == 2 Then
         Begin
            Set $FontsetInfo = {Fontset:|} $FontsetName {||} $FontName {|Style: } $FontStyle {|Size: } (Add $FontSizeNum 3)
            ChangeTitle 7 $FontsetInfo
         End
      End
      2 :
      Begin
         If (GetValue 10) == 1 Then
         Begin
            Set $FontConstruct = $FontMonoBoldSmallStr
            SendSignal 101 3
         End
         If (GetValue 10) == 2 Then
         Begin
            Set $FontConstruct = $FontMonoBoldMediumStr
            SendSignal 101 3
         End
         If (GetValue 10) == 3 Then
         Begin
            Set $FontConstruct = $FontMonoBoldLargeStr
            SendSignal 101 3
         End
      End
End

Widget 20
   Property
   Position 18 554
   Size 490 24
   Flags NoReliefString Hidden Left
   Type TextField
   Colorset 20
   Font "xft:::pixelsize=24"
   Main
      Case message of
      SingleClic :
      Begin
         SendSignal 101 1
      End
End

Widget 21
   Property
   Position 10 334
   Size 508 260
   Flags NoReliefString NoFocus
   Type Rectangle
   Main
      Case message of
      SingleClic :
      Begin
      End
End

Widget 22
   Property
   Position 14 604
   Size 100 20
   Flags NoReliefString
   Type CheckBox
   Font "xft:::pixelsize=14"
   Value 1
   Title { Run User Script}
   Main
      Case message of
      SingleClic :
      Begin
      End
End

Widget 23
   Property
   Position 166 604
   Size 100 30
   Flags NoReliefString
   Type CheckBox
   Value 1
   Title { Refresh GTK2/GTK3}
   Font "xft:::pixelsize=14"
   Main
      Case message of
      SingleClic :
      Begin
      End
End

Widget 24
   Property
   Position 344 604
   Size 100 30
   Flags NoReliefString
   Type CheckBox
   Value 1
   Title { Refresh X Resources}
   Font "xft:::pixelsize=14"
   Main
      Case message of
      SingleClic :
      Begin
      End
End

Widget 25
   Property
   Position 4 638
   Size 518 0
   Flags NoReliefString NoFocus
   Type Rectangle
   Main
      Case message of
      SingleClic :
      Begin
      End
End

Widget 26
   Property
   Position 14 652
   Size 120 20
   Flags NoReliefString
   Type PushButton
   LocaleTitle {Save ...}
   Font "xft:::pixelsize=15"
   Main
      Case message of
      SingleClic :
      Begin
         If $OperationMode == 1 Then
         Begin
            Set $ARG = {InputForm "$[gt.Enter New Fontset Name:]" "Custom"}
            Set $INPUTFORM = (LaunchScript $ARG )
         End
         If $OperationMode == 2 Then
         Begin
            SendSignal 26 2
         End
      End
      1 :
      Begin
         If (LastString) <> {Cancel} Then
         Begin
            Set $UserFontsetCmd = {echo '} (LastString) {' | $NSCDE_ROOT/bin/ised -c 's/>\|<\|\/\|;\|:\|\[\|\]\|\\\|\$\|#\|%\|\&\|"\|\!\|\^\|\*\|(\|)\||\|?\| //g' -o -f -}
            Set $UserFontset = (GetOutput $UserFontsetCmd 1 1)

            If $UserFontset == {} Then
            Begin
               Do {f_Notifier "Font Style Manager" "Dismiss" "NsCDE/Warning.xpm" "$[gt.Fontset name must be defined before saving it!]"}
            End
            Else
            Begin
               Set $UserConfigDir = (GetOutput {echo $FVWM_USERDIR} 1 -1)
               Set $UserFontsetFile = $UserConfigDir {/fontsets/} $UserFontset {.fontset}
               Do {Exec exec mkdir -p "$[FVWM_USERDIR]/fontsets"}
   
               Do {Schedule 20 Exec exec echo 'InfoStoreAdd font.variable.normal.small "} $FontNormalSmallStr {"' > '} $UserFontsetFile {'}
               Do {Schedule 40 Exec exec echo 'InfoStoreAdd font.variable.bold.small "} $FontBoldSmallStr {"' >> '} $UserFontsetFile {'}
               Do {Schedule 60 Exec exec echo 'InfoStoreAdd font.variable.italic.small "} $FontItalicSmallStr {"' >> '} $UserFontsetFile {'}
               Do {Schedule 80 Exec exec echo 'InfoStoreAdd font.monospaced.normal.small "} $FontMonoSmallStr {"' >> '} $UserFontsetFile {'}
               Do {Schedule 100 Exec exec echo 'InfoStoreAdd font.monospaced.bold.small "} $FontMonoBoldSmallStr {"' >> '} $UserFontsetFile {'}
   
               Do {Schedule 120 Exec exec echo 'InfoStoreAdd font.variable.normal.medium "} $FontNormalMediumStr {"' >> '} $UserFontsetFile {'}
               Do {Schedule 140 Exec exec echo 'InfoStoreAdd font.variable.bold.medium "} $FontBoldMediumStr {"' >> '} $UserFontsetFile {'}
               Do {Schedule 160 Exec exec echo 'InfoStoreAdd font.variable.italic.medium "} $FontItalicMediumStr {"' >> '} $UserFontsetFile {'}
               Do {Schedule 180 Exec exec echo 'InfoStoreAdd font.monospaced.normal.medium "} $FontMonoMediumStr {"' >> '} $UserFontsetFile {'}
               Do {Schedule 200 Exec exec echo 'InfoStoreAdd font.monospaced.bold.medium "} $FontMonoBoldMediumStr {"' >> '} $UserFontsetFile {'}
   
               Do {Schedule 220 Exec exec echo 'InfoStoreAdd font.variable.normal.large "} $FontNormalLargeStr {"' >> '} $UserFontsetFile {'}
               Do {Schedule 240 Exec exec echo 'InfoStoreAdd font.variable.bold.large "} $FontBoldLargeStr {"' >> '} $UserFontsetFile {'}
               Do {Schedule 260 Exec exec echo 'InfoStoreAdd font.variable.italic.large "} $FontItalicLargeStr {"' >> '} $UserFontsetFile {'}
               Do {Schedule 280 Exec exec echo 'InfoStoreAdd font.monospaced.normal.large "} $FontMonoLargeStr {"' >> '} $UserFontsetFile {'}
               Do {Schedule 300 Exec exec echo 'InfoStoreAdd font.monospaced.bold.large "} $FontMonoBoldLargeStr {"' >> '} $UserFontsetFile {'}
   
               Do {Schedule 340 Exec exec ln -sf "} $UserFontsetFile {" "$[FVWM_USERDIR]/NsCDE-Font-$[NSCDE_FONT_DPI]dpi.conf"}
   
               SendSignal 26 3
            End
         End
      End
      2 :
      Begin
            Set $UserFontsetFile = $FontsetPath
            Do {Exec exec ln -sf "} $UserFontsetFile {" "$[FVWM_USERDIR]/NsCDE-Font-$[NSCDE_FONT_DPI]dpi.conf"}
            SendSignal 26 3
      End
      3 :
      Begin
            If (GetValue 22) == 1 Then
            Begin
               Set $CheckUserCustomScriptExist = (GetOutput {ls -1 "$FVWM_USERDIR/libexec/fontmgr.local" > /dev/null 2>&1; echo $?} 1 -1)
               If $CheckUserCustomScriptExist == 0 Then
               Begin
                  Set $RunUserScriptCmd = {sleep 1; $FVWM_USERDIR/libexec/fontmgr.local "} $UserFontsetFile {"}
                  Set $RunUserScript = (GetOutput $RunUserScriptCmd 1 -1)
               End
            End

            If (GetValue 23) == 1 Then
            Begin
               Set $PrepareFontCmd = {$NSCDE_ROOT/libexec/fontmgr -T "} $FontNormalMediumStr {"}
               Set $PrepareFont = (GetOutput $PrepareFontCmd 1 -1)
               Set $Gtk2FontCmd = {$NSCDE_ROOT/bin/confset.py -t properties -c "$HOME/.gtkrc-2.0" -k gtk-font-name -v ' "} $PrepareFont {"' 2>&1}
               Set $Gtk2Font = (GetOutput $Gtk2FontCmd 1 -1)
               If $Gtk2Font <> {} Then
               Begin
                  Do {f_Notifier "Font Style Manager" "Dismiss" "NsCDE/Error.xpm" "$[gt.Error editing] $HOME/.gtkrc-2.0: \\\"} $Gtk2Font {\\\""}
               End
               Set $Gtk3FontCmd = {$NSCDE_ROOT/bin/confset.py -t ini -c "$HOME/.config/gtk-3.0/settings.ini" -s Settings -k gtk-font-name -v "} $PrepareFont {" 2>&1}
               Set $Gtk3Font = (GetOutput $Gtk3FontCmd 1 -1)
               If $Gtk3Font <> {} Then
               Begin
                  Do {f_Notifier "Font Style Manager" "Dismiss" "NsCDE/Error.xpm" "$[gt.Error editing] $HOME/.config/gtk-3.0/settings.ini: \\\"} $Gtk3Font {\\\""}
               End
   
               # XSETTINGS Daemon Integration
               Set $XSETTINGSFILE = (GetOutput {echo $FVWM_USERDIR/Xsettingsd.conf} -1 1)
   
               # Xsettingsd Integration - only if $FVWM_USERDIR/Xsettingsd.conf is found
               If $XSETTINGSFILE <> {} Then
               Begin
                  Set $XsettingsParamExistanceCmd = {egrep -q '^([[:space:]]+)?Gtk\/FontName[[:space:]]+' "} $XSETTINGSFILE {"; echo $?}
                  Set $XsettingsParamExistance = (GetOutput $XsettingsParamExistanceCmd 1 1)
                  If $XsettingsParamExistance == 0 Then
                  Begin
                     Set $WriteXSettingsdCmd = {$NSCDE_ROOT/bin/ised -c 's/\(^\([[:space:]]\+\)\?Gtk\/FontName[[:space:]]\+\)\(\([[:space:]]\+\)\?\([[:space:]]\+\)\?\).*/\1\"} $PrepareFont {\"/g' -f "} $XSETTINGSFILE {"}
                  End
                  Else
                  Begin
                     Set $WriteXSettingsdCmd = {echo -ne "\n# Added by Font Style Manager\nGtk/FontName \"} $PrepareFont {\"\n" >> "} $XSETTINGSFILE {"}
                  End
                  Set $WriteXSettingsd = (GetOutput $WriteXSettingsdCmd 1 -1)
               End
            End

            If (GetValue 24) == 1 Then
            Begin
               # Wait a second for $UserFontsetFile to be written ... a race.
               Set $DoXresourcesCmd = {sleep 1; $NSCDE_ROOT/libexec/fontmgr -X "} $UserFontsetFile {" > "$FVWM_USERDIR/Xdefaults.fontdefs"}
               Set $DoXresources = (GetOutput $DoXresourcesCmd 1 -1)
            End

            Set $QUITARG = {ChoiceForm "$[gt.Do you want to restart NsCDE with new font properties now?]" "$[gt.Yes]" "$[gt.No]" "$[gt.User Action Required]"}
            Set $QUITFORM = (LaunchScript $QUITARG )
            Set $QuitStarted = 1
            SendSignal 26 4
      End
      4 :
      Begin
         Do {Echo %%% %%% %%% QUIT-ACTION-STRING: } (LastString)
         If (LastString) == {Go} Then
         Begin
            Do {Exec exec cd $[HOME]; xrdb -remove; xrdb -cpp /usr/bin/cpp < .NsCDE/Xdefaults}
            Do {Schedule 380 Restart}
            Quit
         End
         If (LastString) == {Cancel} Then
         Begin
            Quit
         End
      End
End

Widget 27
   Property
   Position 202 652
   Size 120 20
   Flags NoReliefString
   Type PushButton
   LocaleTitle {Cancel}
   Font "xft:::pixelsize=15"
   Main
      Case message of
      SingleClic :
      Begin
         SendSignal 27 1
      End
      1 :
      Begin
         Quit
      End
End

Widget 28
   Property
   Position 392 652
   Size 120 20
   Flags NoReliefString
   Type PushButton
   LocaleTitle {Help}
   Font "xft:::pixelsize=15"
   Main
      Case message of
      SingleClic :
      Begin
         SendSignal 28 1
      End
      1 :
      Begin
         Do {f_DisplayURL "Font Style Manager" $[NSCDE_ROOT]/share/doc/html/NsCDE-FontMgr.html}
      End
End

Widget 101
   Property
   Position 18 564
   Size 490 48
   Flags NoReliefString NoFocus Hidden
   Type PushButton
   Colorset 20
   Main
      Case message of
      SingleClic :
      Begin
      End
      1 :
      Begin
         If $ActivePreviewField == 15 Then
         Begin
            ChangeValue 12 1
            ChangeColorset 16 22
            ChangeColorset 17 22
            ChangeColorset 18 22
            ChangeColorset 19 22
            ChangeColorset 15 20
            If (GetValue 10) == 1 Then
            Begin
               ChangeFont 20 $FontNormalSmallStr
            End
            If (GetValue 10) == 2 Then
            Begin
               ChangeFont 20 $FontNormalMediumStr
            End
            If (GetValue 10) == 3 Then
            Begin
               ChangeFont 20 $FontNormalLargeStr
            End
         End
         If $ActivePreviewField == 16 Then
         Begin
            ChangeValue 12 2
            ChangeColorset 15 22
            ChangeColorset 17 22
            ChangeColorset 18 22
            ChangeColorset 19 22
            ChangeColorset 16 20
            If (GetValue 10) == 1 Then
            Begin
               ChangeFont 20 $FontBoldSmallStr
            End
            If (GetValue 10) == 2 Then
            Begin
               ChangeFont 20 $FontBoldMediumStr
            End
            If (GetValue 10) == 3 Then
            Begin
               ChangeFont 20 $FontBoldLargeStr
            End
         End
         If $ActivePreviewField == 17 Then
         Begin
            ChangeValue 12 3
            ChangeColorset 15 22
            ChangeColorset 16 22
            ChangeColorset 18 22
            ChangeColorset 19 22
            ChangeColorset 17 20
            If (GetValue 10) == 1 Then
            Begin
               ChangeFont 20 $FontItalicSmallStr
            End
            If (GetValue 10) == 2 Then
            Begin
               ChangeFont 20 $FontItalicMediumStr
            End
            If (GetValue 10) == 3 Then
            Begin
               ChangeFont 20 $FontItalicLargeStr
            End
         End
         If $ActivePreviewField == 18 Then
         Begin
            ChangeValue 12 4
            ChangeColorset 15 22
            ChangeColorset 16 22
            ChangeColorset 17 22
            ChangeColorset 19 22
            ChangeColorset 18 20
            If (GetValue 10) == 1 Then
            Begin
               ChangeFont 20 $FontMonoSmallStr
            End
            If (GetValue 10) == 2 Then
            Begin
               ChangeFont 20 $FontMonoMediumStr
            End
            If (GetValue 10) == 3 Then
            Begin
               ChangeFont 20 $FontMonoLargeStr
            End
         End
         If $ActivePreviewField == 19 Then
         Begin
            ChangeValue 12 5
            ChangeColorset 15 22
            ChangeColorset 16 22
            ChangeColorset 17 22
            ChangeColorset 18 22
            ChangeColorset 19 20
            If (GetValue 10) == 1 Then
            Begin
               ChangeFont 20 $FontMonoBoldSmallStr
            End
            If (GetValue 10) == 2 Then
            Begin
               ChangeFont 20 $FontMonoBoldMediumStr
            End
            If (GetValue 10) == 3 Then
            Begin
               ChangeFont 20 $FontMonoBoldLargeStr
            End
         End
      End
   2 :
   Begin
      # This is used for setting initial value on start.
      ChangeValue 12 1
      SendSignal 15 1
   End
   3 :
   Begin
      Set $SplitFontStrCmd = {$NSCDE_ROOT/libexec/fontmgr -r '} $FontConstruct {'}
      Set $FontNameNum = (GetOutput $SplitFontStrCmd 1 -1)
      Set $FontStyleNum = (GetOutput $SplitFontStrCmd 2 -1)
      Set $FontSizeNum = (Add (GetOutput $SplitFontStrCmd 3 -1) -3)
      Set $FontName = (GetOutput $SplitFontStrCmd 4 -1)
      Set $FontStyle = (GetOutput $SplitFontStrCmd 5 -1)
   
      Set $StyleListMenuCmd = {$NSCDE_ROOT/libexec/fontmgr -G menu -g '} $FontName {'}
      Set $StyleListMenu = (GetOutput $StyleListMenuCmd 1 -1)
   
      If $OperationMode == 1 Then
      Begin
         ChangeValue 5 $FontNameNum
         ChangeTitle 7 $StyleListMenu
         ChangeValue 7 $FontStyleNum
         ChangeValue 14 $FontSizeNum
      End
   End
End

