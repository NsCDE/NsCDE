#
# This file is a part of the NsCDE - Not so Common Desktop Environment
# Author: Hegel3DReloaded
# Licence: GPLv3
#

#
# This is Functions.fvwmlocal example
#

# Examples of local user definitions and redefinitions of some
# NsCDE/FVWM functions. Uncomment what is needed, edit and
# customize to suit.

# Called from Calendar Applet right of the clock on the
# Front Panel. Default action is "Nop" (No Operation)
# DestroyFunc f_Calendar
# AddToFunc f_Calendar
# + I None (Thunderbird) Exec exec thunderbird
# + I None (Thunderbird) Wait Thunderbird
# + I All (Thunderbird, !Iconic) FakeKeypress depth 2 modifiers 8 modifiers 6 press c wait 200 modifiers -8 modifiers -6 release c
# + I All (Thunderbird, !Iconic) Schedule 150 WarpToWindow 50 50

# Called from E-Mail Applet on the Front Panel
# Default action is "Nop" (No Operation)
# Front Panel Check Mail
# DestroyFunc f_CheckMail
# AddToFunc f_CheckMail
# + I Exec exec $[FVWM_USERDIR]/libexec/checkmail.sh
# + I None (Thunderbird) Exec exec thunderbird
# + I None (Thunderbird) Wait Thunderbird
# + I All (Thunderbird, !Iconic) FakeKeypress depth 2 modifiers 1 press 1 wait 200 modifiers -1 release 1
# + I All (Thunderbird, !Iconic) Schedule 150 WarpToWindow 50 50

# Fplite applet on Front Panel, right top of WSM
# Can be overriden by user if user has some fancy
# app for processes and system resources.
# DestroyFunc f_FpLiteClickAction
# AddToFunc f_FpLiteClickAction
# + I Test (x progname) Exec exec progname -progoption

# Called from FvwmEvent MainLoop. Here, user can set
# own hooks to be done when current desk changes.
# DestroyFunc f_UserChangeDesk
# AddToFunc f_UserChangeDesk
# + I All (CurrentPage, FrontPanel) Focus

# Called from FvwmEvent MainLoop. Here, user can set
# own hooks to be done when current page changes.
# DestroyFunc f_UserChangePage
# AddToFunc f_UserChangePage
# + I Nop

# Hook of the f_SysAddWindowEvent called from FvwmEvent on add_window
# event. Called when new window appears. This example focuses every
# new window but avoids FrontPanel and Subpanels because of strange
# interaction. Note that this example will block FVWM during startup
# and often make screen pointer to look like a cross if InitFunction
# or StartFunction is in progress and is opening new windows, and
# Ctrl+Alt+Esc (EscapeFunc) must be used multiple times to get out of
# thar blocking. Care should be taken to avoid this somehow.
# DestroyFunc f_AddWindowEvent
# AddToFunc f_AddWindowEvent
# + I Current (NsCDE-Subpanel-*) Break 1
# + I Current (FrontPanel) Break 1
# + I Echo $0
# + I WindowId $0 Focus

# Hook of the f_SysConfigureWindowEvent called from
# FvwmEvent on configure_window event. See
# FvwmEvent(1) and f_SysConfigureWindowEvent in
# NsCDE share/NsCDE/fvwm/Functions.fvwmconf
# DestroyFunc f_ConfigureWindowEvent
# AddToFunc f_ConfigureWindowEvent
# + I Nop

# Hook of the f_SysMapEvent called from FvwmEvent on
# map window event. See FvwmEvent(1) and f_SysMapEvent
# in NsCDE share/NsCDE/fvwm/Functions.fvwmconf
# DestroyFunc f_MapEvent
# AddToFunc f_MapEvent
# + I Nop

# Hook of the f_SysDestroyWindowEvent called from
# FvwmEvent on destroy_window event. See
# FvwmEvent(1) and f_SysDestroyWindowEvent in
# DestroyFunc f_DestroyWindowEvent
# AddToFunc f_DestroyWindowEvent
# + I Nop

# Hook of the RestartFunction called when
# FVWM is restarted.
DestroyFunc f_UserRestartFunction
AddToFunc f_UserRestartFunction
+ I All (Gkrellm,gkrellm,CirculateHit) Schedule 250 Move screen p $[infostore.gkrellm.pos.placement]
# + I Test (!EnvMatch infostore.nscde_use_stalonetray 1) Break 1
# + I Wait stalonetray
# + I All (stalonetray,stalonetray,CirculateHit) Move screen p $[infostore.stalonetray.pos.placement]

# Function: f_UserEnterWindow
# Called from f_EnterWindow on mouse hover (FvwmEvent)
# Parameters: $0 - Window ID from FvwmEvent(1)
# DestroyFunc f_UserEnterWindow
# AddToFunc f_UserEnterWindow
# + I Nop

# Function: f_UserLeaveWindow
# Called from f_LeaveWindow on mouse hover (FvwmEvent)
# Parameters: $0 - Window ID from FvwmEvent(1)
# DestroyFunc f_UserLeaveWindow
# AddToFunc f_UserLeaveWindow
# + I Nop

